plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '8.5.13'
    id "org.sonarqube" version "4.4.1.3373"
}

task copySubmodule(type: Copy) {
    copy {
        from './secret'
        include "application.yml"
        into 'src/main/resources'
    }

    copy {
        from './secret/dev'
        include "application-dev.yml"
        into 'src/main/resources'
    }

    copy {
        from './secret/prod'
        include "application-prod.yml"
        into 'src/main/resources'
    }

    copy {
        from './secret/test'
        include "application-test.yml"
        into 'src/test/resources'
        rename("application-test.yml", "application.yml")
    }
}

ext {
    set('springCloudVersion', "2023.0.0")
}

group = 'com.eodya'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    //테스트 코드 관련
    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //flyway 설정
    implementation 'org.flywaydb:flyway-core'

    //JPA의 Spatial type -> MySQL point
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '6.4.1.Final'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 추가

    //OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'

    //jwt
    implementation "io.jsonwebtoken:jjwt:0.9.1"

    //com.sun.xml.bind
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
    implementation 'com.sun.xml.bind:jaxb-core:4.0.1'

    //javax.xml.bind
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    //aws 설정
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //swagger 설정
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "eodya_eodya-backend"
        property "sonar.organization", "eodya-backend"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}